<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


<!--
     引用类型自动注入：spring根据某些规则可以给引用类型赋值，不用再给引用类型赋值
         使用规则常用的是byName，byType，
       1、byName（按名称注入）：java类中引用类型的属性名和spring容器中（配置文件）<bean>的id一样，
                             且数据类型是一样的，这样的容器中的bean，spring能赋值给引用类型

          语法：
            <bean id="xx" class="yyyy" autowire="byType" >
               简单类型赋值属性
            </bean>

       2、byType（按类型注入）：Java类中引用数据类型和spring容器中<bean>的class属性
                             是同源关系的，这样的bean能够赋值给引用类型
          同源就是一类的意思：
            1、java类中引用类型的数据类型和bean的class的值是一样的
            2、java类中引用类型的数据类型和bean的class的值是父子关系
            3、java类中引用类型的数据类型和bean的class的值是接口和实现类的关系
         语法：
            <bean id="xx" class="yyyy" autowire="byType" >
               简单类型赋值属性
            </bean>

            注意：在byType中，在xml配置文件中声明bean只能有一个符合条件的
                 多余一个是错误的

-->

    <!--<bean id="myStudent" class="com.bjpowernode.ba05.Student" autowire="byType" >
        <property name="age" value="20" />
        <property name="name" value="张三" />
    </bean>-->

    <bean id="school" class="com.bjpowernode.ba05.School">
        <property name="name" value="北京小学" />
        <property name="address" value="北京" />
    </bean>


<!--    声明school子类-->
    <bean id="pyschool" class="com.bjpowernode.ba05.PrimarySchool">
        <property name="name" value="北京小学" />
        <property name="address" value="北京" />
    </bean>


</beans>